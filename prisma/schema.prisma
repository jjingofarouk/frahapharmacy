
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id            Int              @id @default(autoincrement())
  name          String           @unique
  description   String?
  price         Float
  stock         Int
  imageUrl      String?          // Cloudinary URL
  categories    ProductCategory[] // Many-to-many relation
  orders        OrderItem[]
  inventoryLogs InventoryLog[]
  createdAt     DateTime         @default(now())
  updatedAt     DateTime         @updatedAt
}

model Category {
  id            Int              @id @default(autoincrement())
  name          String           @unique
  description   String?
  products      ProductCategory[] // Many-to-many relation
  createdAt     DateTime         @default(now())
  updatedAt     DateTime         @updatedAt
}

model ProductCategory {
  productId     Int
  categoryId    Int
  product       Product          @relation(fields: [productId], references: [id])
  category      Category         @relation(fields: [categoryId], references: [id])
  @@id([productId, categoryId])
}

model User {
  id            Int              @id @default(autoincrement())
  email         String           @unique
  password      String
  role          String           @default("admin")
  name          String?
  createdAt     DateTime         @default(now())
  updatedAt     DateTime         @updatedAt
  inventoryLogs InventoryLog[]
  orders        Order[]
}

model Order {
  id            Int              @id @default(autoincrement())
  userId        Int?
  user          User?            @relation(fields: [userId], references: [id])
  total         Float
  status        String           @default("pending")
  createdAt     DateTime         @default(now())
  updatedAt     DateTime         @updatedAt
  items         OrderItem[]
}

model OrderItem {
  id            Int              @id @default(autoincrement())
  orderId       Int
  order         Order            @relation(fields: [orderId], references: [id])
  productId     Int
  product       Product          @relation(fields: [productId], references: [id])
  quantity      Int
  price         Float
}

model InventoryLog {
  id              Int              @id @default(autoincrement())
  productId       Int
  product         Product          @relation(fields: [productId], references: [id])
  userId          Int?
  user            User?            @relation(fields: [userId], references: [id])
  quantityChange  Int
  reason          String
  createdAt       DateTime         @default(now())
}